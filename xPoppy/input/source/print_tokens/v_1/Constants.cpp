/* *******************************************************************
    File name : tokens.h
    Purpose   : This is the header file for the tokenizer.c It 
                contains the type definitions to be exported from
                the tokenizer.c.
 * ******************************************************************* */

public class Constants {
	public static final int TRUE = 1;
	public static final int FALSE = 0;
	public static final int EOTSTREAM = 0;
	public static final int NUMERIC = 18;
	public static final int IDENTIFIER = 17;
	public static final int LAMBDA = 6;
	public static final int AND = 9;
	public static final int OR = 11;
	public static final int IF = 13;
	public static final int XOR = 16;
	public static final int LPAREN = 19;
	public static final int RPAREN = 20;
	public static final int LSQUARE = 21;
	public static final int RSQUARE = 22;
	public static final int QUOTE = 23;
	public static final int BQUOTE = 24;
	public static final int COMMA = 25;
	public static final int EQUALGREATER = 32;
	public static final int STRING_CONSTANT = 27;
	public static final int CHARACTER_CONSTANT = 29;
	public static final int ERROR = -1;

	public static int default1[]={
			54, 17, 17, 17, 17, 17, 17, 17, 17, 17,
			17, 17, 17, 17, 17, 17, 17, 51, -2, -1,
			-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1, -1, -1, -1, -1 ,-1, -1, -1, -1, -1,
			-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
			-1, 52, -3, -1 ,-1, -1, -1, -1, -1, -1
	};
	public static int base[]   ={
			-32, -96,-105, -93, -94, -87, -1,  -97, -86, -1,
			-99, -1,  -72, -1,  -80, -82, -1,   53,  43, -1,
			-1,  -1,  -1,  -1,  -1,  -1,  133, -1,  233, -1,
			-1,  0,   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
			-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
			-1,  46,  40,  -1, 251,  -1,  -1,  -1,  -1,  -1
	};
#ifdef F_PT_HD_6
	public static int next[] = {
            0,  2, 26, 28,  3,  4,  5, 23, 19, 20,
            6, -1, 25,  8,  9, 11, 18, 18, 18, 18,
           18, 18, 18, 18, 18, 18, -1, 30, -1, 31,
           13, 15, 16, 17, 17, 17, 17, 17, 17, 17,
           17, 17, 17, 17, 17, 17, 17, 10, 17, 17,
           17, 17, 17, 17, 17, 17, 17, 17, 17, 21,
           -1, 22, 32, -1, 24,  7, 17, 17, 17, 17,
           17, 17, 17, 12, 17, 17,  1, 17, 17, 10,
           17, 17, 17, 17, 17, 17, 17, 17, 14, 17,
           17, 18, 18, 18, 18, 18, 18, 18, 18, 18,
           18, 17, 17, 17, 17, 17, 17, 17, 17, 17,
           17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
           17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
           17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
           17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
           17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
           17, 17, 17, -1, 11, 26, 26, 27, 26, 26,
           26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
           26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
           26, 26, 26, 26, 26, 26, 11, 26, 26, 26,
           26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
           26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
           26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
           26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
           26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
           26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
            0,  0, -1, -1, -1, 29, 29, 29, 29, 29,
           29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
           29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
           29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
           29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
           29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
           29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
           29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
           29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
           29, 29, 29, 29, 29, 29, 29, 29, 29, 29
      };
	  public static int check[] = {   0,  1,  0,  0,  2,  3,  4,  0,  0,  0,
            5, -1,  0,  7,  8, 10,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0, -1,  0, -1,  0,
           12, 14, 15,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
           -1,  0, 31, -1,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
            0, 18, 18, 18, 18, 18, 18, 18, 18, 18,
           18, 17, 17, 17, 17, 17, 17, 17, 17, 17,
           17, 51, 51, 51, 51, 51, 51, 51, 51, 51,
           51, 51, 51, 51, 51, 51, 51, 51, 51, 51,
           51, 51, 51, 51, 51, 51, 51, 52, 52, 52,
           52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
           52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
           52, 52, 52, -1, 10, 26, 26, 26, 26, 26,
           26, 26, 26, 26, 26, 26, 26, 26, 26, 26,  
           26, 26, 26, 26, 26, 26, 26, 26, 26, 26,  
           26, 26, 26, 26, 26, 26, 10, 26, 26, 26,  
           26, 26, 26, 26, 26, 26, 26, 26, 26, 26,  
           26, 26, 26, 26, 26, 26, 26, 26, 26, 26,  
           26, 26, 26, 26, 26, 26, 26, 26, 26, 26,  
           26, 26, 26, 26, 26, 26, 26, 26, 26, 26,  
           26, 26, 26, 26, 26, 26, 26, 26, 26, 26,  
           26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
           54, 54, -1, -1, -1, 28, 28, 28, 28, 28,
           28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
           28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
           28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
           28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
           28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
           28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
           28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
           28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
#else
	public static int next[] = {
			0,  2, 26, 28,  3,  4,  5, 23, 19, 20,
			6, -1, 25,  8,  9, 11, 18, 18, 18, 18,
			18, 18, 18, 18, 18, 18, -1, 30, -1, 31,
			13, 15, 16, 17, 17, 17, 17, 17, 17, 17,
			17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
			17, 17, 17, 17, 17, 17, 17, 17, 17, 21,
			-1, 22, 32, -1, 24,  7, 17, 17, 17, 17,
			17, 17, 17, 12, 17, 17,  1, 17, 17, 10,
			17, 17, 17, 17, 17, 17, 17, 17, 14, 17,
			17, 18, 18, 18, 18, 18, 18, 18, 18, 18,
			18, 17, 17, 17, 17, 17, 17, 17, 17, 17,
			17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
			17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
			17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
			17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
			17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
			17, 17, 17, -1, -1, 26, 26, 27, 26, 26,
			26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
			26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
			26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
			26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
			26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
			26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
			26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
			26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
			26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
			0,  0, -1, -1, -1, 29, 29, 29, 29, 29,
			29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
			29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
			29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
			29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
			29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
			29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
			29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
			29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
			29, 29, 29, 29, 29, 29, 29, 29, 29, 29
	};
	public static int check[] = {   0,  1,  0,  0,  2,  3,  4,  0,  0,  0,
			5, -1,  0,  7,  8, 10,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0, -1,  0, -1,  0,
			12, 14, 15,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			-1,  0, 31, -1,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0, 18, 18, 18, 18, 18, 18, 18, 18, 18,
			18, 17, 17, 17, 17, 17, 17, 17, 17, 17,
			17, 51, 51, 51, 51, 51, 51, 51, 51, 51,
			51, 51, 51, 51, 51, 51, 51, 51, 51, 51,
			51, 51, 51, 51, 51, 51, 51, 52, 52, 52,
			52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
			52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
			52, 52, 52, -1, -1, 26, 26, 26, 26, 26,
			26, 26, 26, 26, 26, 26, 26, 26, 26, 26,  
			26, 26, 26, 26, 26, 26, 26, 26, 26, 26,  
			26, 26, 26, 26, 26, 26, 26, 26, 26, 26,  
			26, 26, 26, 26, 26, 26, 26, 26, 26, 26,  
			26, 26, 26, 26, 26, 26, 26, 26, 26, 26,  
			26, 26, 26, 26, 26, 26, 26, 26, 26, 26,  
			26, 26, 26, 26, 26, 26, 26, 26, 26, 26,  
			26, 26, 26, 26, 26, 26, 26, 26, 26, 26,  
			26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
			54, 54, -1, -1, -1, 28, 28, 28, 28, 28,
			28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
			28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
			28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
			28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
			28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
			28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
			28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
			28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
#endif
#ifdef F_PT_HD_4
			28, 28, 28, 28, 28, 28, 28, 28, 28, 27 /* constant mutation */
#else
			28, 28, 28, 28, 28, 28, 28, 28, 28, 28
#endif
	};

}