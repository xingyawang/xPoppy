package net.sourceforge.jxml2sql.output;

import java.util.Vector;
import java.util.StringTokenizer;
import net.sourceforge.jxml2sql.database.*;

/**
 * A class for generating HTML output from a Database object
 *
 * @author Adam VanderHook
 * @version $Id: HTMLOutput.java,v 1.2 2001/01/08 15:22:50 acidos Exp $
 * @since 0.1.0-pre1
 */
public class HTMLOutput extends Output {

	/**
	 * Create an HTMLOutput object with  a <code>NULL</code> database.
	 *
	 * @since 0.1.0-pre1
	 */
	public HTMLOutput() {
		super();
	}

	/**
	 * Create an HTMLObject with the specified database.
	 *
	 * @param	db	The database to generate the output from
	 * @since 0.1.0-pre1
	 */
	public HTMLOutput(Database db) {
		super(db);
	}

	/**
	 * Compiles a String object (down-cast to Object) of the HTML output
	 *
	 * @return	Object	A String (down-cast to Object) of the HTML output
	 * @since 0.1.0-pre1
	 */
	public Object getOutput() {
		String result = new String();
		Vector tables, fields, options;

		result  = "<html>\n<head>\n<title>SQL Database for ";
		result += db.getName();
		result += "</title>\n<!--\n";
		result += "\tGenerated by JXML2SQL (http://jxml2sql.sourceforge.net)\n";
		result += "-->\n</head>\n<body bgcolor='White'>\n";

		result += "<h1>" + db.getName() + "</h1>\n";
		result += "<blockquote>" + db.getDescription() + "</blockquote><p>\n";

		tables = db.getTables();

		for(int i = 0; i < tables.size(); i++) {
			DatabaseTable tb = (DatabaseTable)tables.elementAt(i);

			result += "<table><tr><td>\n";
			result += "<b>Table</b>: " + tb.getName() + "<br>\n";
			result += "<b>Description</b>: " + tb.getDescription() + "<br>\n";
			result += "</td></tr><tr><td>";

			result += "<table border=1 width='100%'>\n";

			fields = tb.getFields();

			for(int x = 0; x < fields.size(); x++) {
				DatabaseField fd = (DatabaseField)fields.elementAt(x);

				result += "<tr>";
				result += "<td>" + fd.getName() + "</td>";
				result += "<td>" + fd.getDescription() + "</td>";
				result += "<td>" + fd.getType() + "(" + fd.getLength() + ")</td>";
				options = fd.getOptions();
				result += "<td>";

				for(int y = 0; y < options.size(); y++)
					result += " " + (String)options.elementAt(y);

				result += "</td></tr>\n";
			}

			result += "</table></td></tr></table>\n<p>\n";
		}

		result += "</body>\n</html>";
		return (Object)result;
	}

}
